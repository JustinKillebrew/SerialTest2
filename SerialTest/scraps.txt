   	
   	
   	
   	
    
    	//estim.put4(0, 0, 313, 521, 3);
    	//Thread.sleep(sleepTimeMs  * 1);
    	//estim.get4(0, 0);
//    	int numPoints = 0;
// 	
//   	List<Integer> params = new ArrayList<>();    	
//    	for (String line : Files.readAllLines(Paths.get("/home/justin/git/somlab/SerialTest/bin/StimCmd_4Chan_50msDur.txt"), Charset.defaultCharset())) {
//    		// clear List
//    		params.clear();
//    		
//    		// 1 trial per line
//    		for (String part : line.split("\\s+")) {
//    			Integer i = Integer.valueOf(part);
//    			params.add(i);
//    		}
//    		numPoints =  (params.size() - 1)  /  5;
//    		System.out.println("Trial " + params.get(0) + " has " + numPoints + " points");
//    		
//    		int id = 0;
//    		for(int i = 1; i < params.size(); i++){	
//    			//estim.put32(params.get(i++), params.get(i++), params.get(i++), params.get(i++), params.get(i));
//    			estim.put4(params.get(i++), params.get(i++), params.get(i++), params.get(i++), params.get(i));
//    			
//    			Thread.sleep(sleepTimeMs / 2);
//    			//estim.get4(0,  id++);
//    		}
//    		System.out.println("Press enter to trigger trial & continue");
//    		System.in.read();
//    		
//        	estim.trigger4(0);
//        	//Thread.sleep(sleepTimeMs * 5);
//      		
//    	}
    	
    
    
    
    
    
    
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
//    	Random rand = new Random();
//    	int max = 0, min = 0;
    	
    	Path specFile = Paths.get("/home/justin/jkcode/xper_sach7/SerialTest/bin/stimSpecTest_1.txt");
    	
    	byte[] fileBuff;
    	
    	fileBuff = Files.readAllBytes(specFile);
    	int num = fileBuff.length;
    	
    	for(int i = 0; i < num; i++){
    		
    		if(fileBuff[i] == '%'){
    			while(fileBuff[++i] != '\n'){}
    			
    		}
    		System.out.print((char)(fileBuff[i]));
    	}
    	
    	